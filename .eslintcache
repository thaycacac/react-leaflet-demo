[{"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\index.tsx":"1","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\reducers\\index.ts":"2","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\components\\Map\\constants.tsx":"3","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\components\\Map\\Map.tsx":"4","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\reducers\\places.ts":"5","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\actions\\index.ts":"6","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\actions\\places.ts":"7"},{"size":637,"mtime":1618289116412,"results":"8","hashOfConfig":"9"},{"size":121,"mtime":1618301572075,"results":"10","hashOfConfig":"9"},{"size":129,"mtime":1618299215935,"results":"11","hashOfConfig":"9"},{"size":4080,"mtime":1618308084682,"results":"12","hashOfConfig":"9"},{"size":1167,"mtime":1618306240681,"results":"13","hashOfConfig":"9"},{"size":25,"mtime":1618289460345,"results":"14","hashOfConfig":"9"},{"size":936,"mtime":1618301475038,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"znec5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\index.tsx",[],["32","33"],"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\reducers\\index.ts",[],"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\components\\Map\\constants.tsx",[],"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\components\\Map\\Map.tsx",["34"],"import React, { useEffect, useState } from \"react\";\r\nimport { DivIcon, LatLngExpression } from \"leaflet\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip } from \"react-leaflet\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setAllPlaces,\r\n  setPlacePreviewVisibility,\r\n  setSelectedPlace,\r\n} from \"../../store/actions\";\r\nimport { IState, Place } from \"../../store/models\";\r\nimport L from \"leaflet\";\r\nimport { COLOR } from \"./constants\";\r\nimport db from \"../../db.json\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = ({\r\n  isVisible,\r\n  places,\r\n  selectedPlace,\r\n  togglePreview,\r\n  setPlaceForPreview,\r\n  setAllPlaces,\r\n}: any) => {\r\n  const defaultPosition: LatLngExpression = [47.495632, 19.061795];\r\n  // for fake data\r\n  const [count, setCount] = useState(0);\r\n\r\n  const callApi = async () => {\r\n    await fetch(\r\n      \"https://my-json-server.typicode.com/thaycacac/react-leaflet-demo/data4\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    setAllPlaces(db[`data${count}`]);\r\n    const idInterval = setInterval(() => {\r\n      callApi();\r\n      setCount((count + 1) % 5);\r\n      // @ts-ignore\r\n      setAllPlaces(db[`data${count}`]);\r\n      const newPlace = places.find(\r\n        (place: Place) => place?.name === selectedPlace?.name\r\n      );\r\n      if (!!newPlace) {\r\n        setPlaceForPreview(newPlace);\r\n      }\r\n      console.log(\r\n        places.find((place: Place) => place?.name === selectedPlace?.name)\r\n      );\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(idInterval);\r\n    };\r\n  }, [count]);\r\n\r\n  const showPreview = (place: Place) => {\r\n    if (isVisible) {\r\n      togglePreview(false);\r\n      setPlaceForPreview(null);\r\n    } else if (selectedPlace?.name !== place?.name) {\r\n      setTimeout(() => {\r\n        showPlace(place);\r\n      }, 400);\r\n    } else {\r\n      setPlaceForPreview(place);\r\n    }\r\n  };\r\n\r\n  const showPlace = (place: Place) => {\r\n    setPlaceForPreview(place);\r\n    togglePreview(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"map__container\">\r\n      <MapContainer\r\n        center={defaultPosition}\r\n        zoom={13}\r\n        scrollWheelZoom={false}\r\n        style={{ height: \"100vh\" }}\r\n        zoomControl={true}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {places?.map((place: Place) => (\r\n          <Marker\r\n            key={place.name}\r\n            position={place.pos}\r\n            icon={\r\n              place?.icon\r\n                ? L.icon({\r\n                    iconUrl: place?.icon,\r\n                    iconRetinaUrl: place?.icon,\r\n                    iconSize: [38, 95],\r\n                    shadowSize: [50, 64],\r\n                    iconAnchor: [22, 94],\r\n                    shadowAnchor: [4, 62],\r\n                    popupAnchor: [-3, -76],\r\n                  })\r\n                : new DivIcon({\r\n                    className: \"my-custom-pin\",\r\n                    iconAnchor: [0, 24],\r\n                    popupAnchor: [0, -36],\r\n                    html: `<span style=\"background-color: ${\r\n                      COLOR[place?.status || \"LVL_1\"]\r\n                    }\" />`,\r\n                  })\r\n            }\r\n            eventHandlers={{ click: () => showPreview(place) }}\r\n          >\r\n            <Tooltip>{place.name}</Tooltip>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { places } = state;\r\n  return {\r\n    isVisible: places.placePreviewsIsVisible,\r\n    places: places.places,\r\n    selectedPlace: places.selectedPlace,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    togglePreview: (payload: boolean) =>\r\n      dispatch(setPlacePreviewVisibility(payload)),\r\n    setPlaceForPreview: (payload: Place) => dispatch(setSelectedPlace(payload)),\r\n    setAllPlaces: (payload: Place[]) => dispatch(setAllPlaces(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\reducers\\places.ts",[],"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\actions\\index.ts",[],"C:\\Users\\hoapn\\Desktop\\RmHub_ReactJS_Test\\RmHub_ReactJS_Test\\react-leaflet-demo\\src\\store\\actions\\places.ts",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":56,"column":6,"nodeType":"41","endLine":56,"endColumn":13,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'places', 'selectedPlace?.name', 'setAllPlaces', and 'setPlaceForPreview'. Either include them or remove the dependency array. If 'setAllPlaces' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [count, places, selectedPlace?.name, setAllPlaces, setPlaceForPreview]",{"range":"48","text":"49"},[1525,1532],"[count, places, selectedPlace?.name, setAllPlaces, setPlaceForPreview]"]